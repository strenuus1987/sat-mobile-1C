
&НаКлиенте
Перем СтруктураРПСОтправитель;

&НаКлиенте
Перем СтруктураРПСПолучатель;

&НаКлиенте
Процедура Поиск(Команда)
	
	ПоискНакладной();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискНакладной()
	
	Элементы.ГруппаСтраницы.Видимость = Ложь;
	Элементы.ГруппаОшибка.Видимость = Ложь;
	
	Если НЕ ПустаяСтрока(СокрЛП(НомерНакладной)) Тогда
		ОтобразитьОтвет(ПоискНаСервере(НомерНакладной));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьКартинкуСтатус(Статус)
		
	Если Статус = "Принят" Тогда
		Элементы.ДекорацияСтатус.Картинка = БиблиотекаКартинок.ПосылкаПринята;
	ИначеЕсли Статус = "В пути" Тогда
		Элементы.ДекорацияСтатус.Картинка = БиблиотекаКартинок.ВПути;
	ИначеЕсли Статус = "Поступил на склад выдачи" Тогда
		Элементы.ДекорацияСтатус.Картинка = БиблиотекаКартинок.ПоступилНаСкладВыдачи;
	ИначеЕсли Статус = "Доставлен получателю" Тогда
		Элементы.ДекорацияСтатус.Картинка = БиблиотекаКартинок.ДоставленПолучателю;
	ИначеЕсли Статус = "Выдан получателю" Тогда
		Элементы.ДекорацияСтатус.Картинка = БиблиотекаКартинок.ВыданаПолучателю;
	ИначеЕсли Статус = "Невостребован получателем" Тогда
		Элементы.ДекорацияСтатус.Картинка = БиблиотекаКартинок.ГрузНевостребован;
	ИначеЕсли Статус = "Переадресован" Тогда
		Элементы.ДекорацияСтатус.Картинка = БиблиотекаКартинок.ПереадресацияГруза;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьОтвет(СтруктураОтвета)
	
	Если СтруктураОтвета <> Неопределено И ТипЗнч(СтруктураОтвета) = Тип("Структура") Тогда
		
		Если СтруктураОтвета.Успешно И СтруктураОтвета.Массив.Количество() > 0 Тогда
			
			Элементы.ГруппаСтраницы.Видимость = Истина;
			
			Накладная = СтруктураОтвета.Массив[0];
			
			Статус = Накладная.currentStatus;
			
			УстановитьКартинкуСтатус(Статус);
			
			ОбщаяСтоимость = Накладная.sum;
			Отправитель = Накладная.senderFullName;
			Получатель = Накладная.recipientFullName;
			ВесГруза = Накладная.weight;
			ВысотаГруза = Накладная.height;
			ДлинаГруза = Накладная.length;
			ШиринаГруза = Накладная.width;
			КоличествоМест = Накладная.seatsAmount;
			ОбъемГруза = Накладная.volume;
			Доставка = Накладная.type;
			
			Если Накладная.Свойство("payData") И ТипЗнч(Накладная.payData) = Тип("Массив") И Накладная.payData.Количество() > 1 Тогда
				
				Элем1 = Накладная.payData[0];
				Элем2 = Накладная.payData[1];
				
				Плательщик1 = Элем1.payerId;
				Сумма1 = Элем1.sum;
				Плательщик2 = Элем2.payerId;
				Сумма2 = Элем2.sum;
				
				Элементы.Плательщик1.Видимость = Истина;
				Элементы.Плательщик2.Видимость = Истина;
				Элементы.Сумма1.Видимость = Истина;
				Элементы.Сумма2.Видимость = Истина;
							
			ИначеЕсли Накладная.Свойство("payData") И ТипЗнч(Накладная.payData) = Тип("Структура") Тогда
				
				Плательщик1 = Накладная.payData.payerId;
				Сумма1 = Накладная.payData.sum;
				
				Элементы.Плательщик1.Видимость = Истина;
				Элементы.Плательщик2.Видимость = Ложь;
				Элементы.Сумма1.Видимость = Истина;
				Элементы.Сумма2.Видимость = Ложь;
				
			Иначе
				
				Элементы.Плательщик1.Видимость = Ложь;
				Элементы.Плательщик2.Видимость = Ложь;
				Элементы.Сумма1.Видимость = Ложь;
				Элементы.Сумма2.Видимость = Ложь;
				
			КонецЕсли;
						
			ДатаПоступления = Накладная.incomingDate;
			
			// РСП
			
			РПСОтправитель = Накладная.rspFrom.description;
			РСППолучатель = Накладная.rspTo.description;
			
			СтруктураРПСОтправитель.Вставить("Адрес", Накладная.rspFrom.address);
			СтруктураРПСОтправитель.Вставить("Город", Накладная.rspFrom.description);
			СтруктураРПСОтправитель.Вставить("Email", Накладная.rspFrom.email);
			СтруктураРПСОтправитель.Вставить("Широта", Накладная.rspFrom.latitude);
			СтруктураРПСОтправитель.Вставить("Долгота", Накладная.rspFrom.longitude);
			СтруктураРПСОтправитель.Вставить("Телефон", Накладная.rspFrom.phone);
			СтруктураРПСОтправитель.Вставить("Расписание", Накладная.rspFrom.schedule);
			
			СтруктураРПСПолучатель.Вставить("Адрес", Накладная.rspTo.address);
			СтруктураРПСПолучатель.Вставить("Город", Накладная.rspTo.description);
			СтруктураРПСПолучатель.Вставить("Email", Накладная.rspTo.email);
			СтруктураРПСПолучатель.Вставить("Широта", Накладная.rspTo.latitude);
			СтруктураРПСПолучатель.Вставить("Долгота", Накладная.rspTo.longitude);
			СтруктураРПСПолучатель.Вставить("Телефон", Накладная.rspTo.phone);
			СтруктураРПСПолучатель.Вставить("Расписание", Накладная.rspTo.schedule);
						
			// История
			
			История.Очистить();
			
			Если Накладная.Свойство("states") И ТипЗнч(Накладная.states) = Тип("Массив") Тогда
				
				Для Каждого Запись Из Накладная.states Цикл
					
					НоваяСтрокаИстории = История.Добавить();
					НоваяСтрокаИстории.Город = Запись.town;
					НоваяСтрокаИстории.Дата = Запись.date;
					НоваяСтрокаИстории.Статус = Запись.status;
					
				КонецЦикла;
				
			ИначеЕсли Накладная.Свойство("states") И ТипЗнч(Накладная.states) = Тип("Структура") Тогда
				
				НоваяСтрокаИстории = История.Добавить();
				НоваяСтрокаИстории.Город = Накладная.states.town;
				НоваяСтрокаИстории.Дата = Накладная.states.date;
				НоваяСтрокаИстории.Статус = Накладная.states.status;
				
			КонецЕсли;
					
		Иначе
									
			Элементы.ГруппаОшибка.Видимость = Истина;
			
			Если СтруктураОтвета.Массив <> Неопределено И СтруктураОтвета.Массив.Количество() = 0 Тогда
				
				ОшибкаКод = "";
				ОшибкаТекст = "Накладная еще не запущена в работу.";
				
			Иначе
				
				ОшибкаКод = "Код ошибки: " + СтруктураОтвета.КодОшибки;
				ОшибкаТекст = СтруктураОтвета.ТекстОшибки;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПоискНаСервере(НомерНакладной)
			
	Соединение = САТ.ПолучитьHTTPсоединение();
	
	Операция = "v1.0/tracking/xml?app=website&number=" + НомерНакладной;
	
	Запрос = САТ.ПолучитьHTTPЗапрос(Операция);
	
	Попытка
		Ответ = Соединение.Получить(Запрос);
		Возврат САТ.xml_ПолучитьПараметры(Ответ.ПолучитьТелоКакСтроку());
	Исключение
		САТ.СообщитьПользователю(ОписаниеОшибки());
	КонецПопытки;	
	
	Возврат Неопределено;
	     
КонецФункции

&НаКлиенте
Процедура РПСОтправительНажатие(Элемент, СтандартнаяОбработка)
			
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФорму("ОбщаяФорма.ДанныеРСП", СтруктураРПСОтправитель,,,,,, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

&НаКлиенте
Процедура РСППолучательНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФорму("ОбщаяФорма.ДанныеРСП", СтруктураРПСПолучатель,,,,,, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаРПСОтправитель(Команда)
	
	ОткрытьФорму("ОбщаяФорма.ДанныеРСП", СтруктураРПСОтправитель,,,,,, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаРСППолучатель(Команда)
	
	ОткрытьФорму("ОбщаяФорма.ДанныеРСП", СтруктураРПСПолучатель,,,,,, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

#Если Клиент Тогда
	
	СтруктураРПСОтправитель = Новый Структура;
	СтруктураРПСПолучатель = Новый Структура;
	
#КонецЕсли
	
